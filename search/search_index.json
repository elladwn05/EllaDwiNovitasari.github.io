{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Biodata Nama : Ella Dwi Novitasari NIM : 180411100126 Kelas : Penambangan Data 5D Dosen Pengampu : Mula'ab,S.SI.,M.kom Jurusan : Teknik Informatika Alamat : Perumahan Graha Indah N-12A, Lamongan","title":"Biodata"},{"location":"#biodata","text":"Nama : Ella Dwi Novitasari NIM : 180411100126 Kelas : Penambangan Data 5D Dosen Pengampu : Mula'ab,S.SI.,M.kom Jurusan : Teknik Informatika Alamat : Perumahan Graha Indah N-12A, Lamongan","title":"Biodata"},{"location":"Statistik Deskriptif/","text":"Pengertian Statistik Deskriptif adalah metode \u2013 metode yang juga berkaitan dengan pengumpulan dan penyajian suatu gugus data sehingga dapat memberikan informasi yang berguna. Statistik Deskriptif juga merupakan metode yang sangat sederhana. Metode ini hanya mendeskripsikan kondisi dari data yang sudah anda miliki dan menyajikannya dalam bentuk tabel diagram grafik dan bentuk lainnya yang disajikan dalam uraian \u2013 uraian singkat dan juga terbatas. Statistik deskriptif hanya terbatas dalam menyajikan data dalam bentuk tabel, diagram, grafik, dan besaran lain, sedangkan statistik inferensial selain mencakup statistik deskriptif juga dapat digunakan untuk melakukan estimasi dan penarikan kesimpulan terhadap populasi dari sampelnya. Untuk sampai pada penarikan kesimpulan statistik inferensia melalui tahap uji hipotesis dan uji statistik. Tipe Data Statistik Deskriptif Mean ( Rata-rata ) Mean merupakan teknik penjelasan kelompok yang didasarkan atas nilai rata-rata dari kelompok tersebut. Mean ini didapat dengan menjumlahkan data seluruh individu dalam kelompok itu, kemudian dibagi dengan jumlah individu yang ada pada kelompok tersebut. $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Diketahui : x bar = x rata - rata = nilai rata - rata sampel x = data ke n n = banyaknya data Median ( Nilai Tengah ) Median merupakan salah satu teknik penjelasan kelompok yang didasarkan atas nilai tengah dari kelompok data yang telah disusun urutannya dari yang terkecil sampai yang terbesar, atau sebaliknya dari yang terbesar sampai yang terkecil. $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ Diketahui : Me = media dari kelompok data n = banyak data Modus Modus merupakan teknik penjelasan kelompok yang didasarkan atas nilai yang sedang populer (yang sedang menjadi mode) atau nilai yang sering muncul dalam kelompok tersebut. Terdapat dua macam modus untuk sebuah data yaitu modus untuk data tunggal dan modus untuk data golongan. $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Diketahui : Mo = modus dari kelompok data Tb = tepi bawah dari elemen modus b1 = selisih frekuensi antara elemen modus dengan elemen sebelumnya b2 = selisih frekuensi antara elemen modus dengan elemen selanjutnya p = panjang interval nilai b1 dan b2 selalu mutlak(bernilai positif) Varian dan Standar Deviasi Standar deviasi dan varian salah satu teknik statistik yg digunakan untuk menjelaskan homogenitas kelompok. Varian merupakan jumlah kuadrat semua deviasi nilai-nilai individual terhadap rata-rata kelompok. Sedangkan akar dari varians disebut dengan standar deviasi atau simpangan baku. Standar deviasi dan varians simpangan baku merupakan variasi sebaran data. Semakin kecil nilai sebarannya berarti variasi nilai data makin sama Jika sebarannya bernilai 0, maka nilai semua datanya adalah sama. Semakin besar nilai sebarannya berarti data semakin bervariasi. $$ \\sigma^2 = {\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n} $$ Diketahui : Xi = titik data x bar = rata-rata dari semua titik data n = banyak dari anggota data Skewness Skewness atau disebut juga ukuran kemiringan yaitu suatu bilangan yang dapat menunjukan miring atau tidaknya bentuk kurva suatu distribusi frekuensi. Skewness adalah derajat ketidaksimetrisan suatu distribusi. Jika kurva frekuensi suatu distribusi memiliki ekor yang lebih memanjang ke kanan (dilihat dari meannya) maka dikatakan menceng kanan (positif) dan jika sebaliknya maka menceng kiri (negatif). Secara perhitungan, skewness adalah momen ketiga terhadap mean. Distribusi normal (dan distribusi simetris lainnya, misalnya distribusi t atau Cauchy) memiliki skewness 0 (nol). $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ Diketahui : Xi = titik data x bar = rata-rata dari distribusi n = jumlah titik dalam distribusi o = standar deviasi Quartile Quartile adalah nilai-nilai yang membagi data dalam 4 bagian yang sama, atau setiap bagian dari kuartil sebesar 25%. Quartile itu ada 3, yaitu quartile pertama, kedua, dan ketiga. Adapun cara mencarinya hampir sama dengan cara mencari median, perbedaanya pada letak quartile. $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Diketahui : Q = nilai dari quartile n = banyak dari himpunan data Penerapan Statistik Deskriptif import pandas as pd from scipy import stats df = pd.read_csv('Tugas 1_Penambangan Data.csv',sep=';') data = {\"stats\": ['Min','Max','Mean','Standard Deviasi','Variasi','Skewnes','Quantile 1','Quantile 2', 'Quantile 3','Median','Modus']} for i in df.columns: data[i] = [df[i].min(), df[i].max(), df[i].mean(), round(df[i].std(),2), round(df[i].var(),2), round(df[i].skew(),2), df[i].quantile(0.25),df[i].quantile(0.5),df[i].quantile(0.75), df[i].median(), stats.mode(df[i]).mode[0]] tes = pd.DataFrame(data) tes.style.hide_index() Hasil run : stats Tinggi Badan Berat Badan Usia Lingkar Badan Min 140 40 20 70 Max 190 70 50 100 Mean 164.882 54.72 34.832 85.228 Standard Deviasi 15.18 8.96 9.3 8.8 Variasi 230.35 80.27 86.4 77.42 Skewnes -0 0.1 0.08 -0.07 Quantile 1 151 47 27 78 Quantile 2 165 54 34 85 Quantile 3 179 63 43.25 93 Median 165 54 34 85 Modus 142 50 28 93 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Statistik Deskriptif"},{"location":"Statistik Deskriptif/#pengertian","text":"Statistik Deskriptif adalah metode \u2013 metode yang juga berkaitan dengan pengumpulan dan penyajian suatu gugus data sehingga dapat memberikan informasi yang berguna. Statistik Deskriptif juga merupakan metode yang sangat sederhana. Metode ini hanya mendeskripsikan kondisi dari data yang sudah anda miliki dan menyajikannya dalam bentuk tabel diagram grafik dan bentuk lainnya yang disajikan dalam uraian \u2013 uraian singkat dan juga terbatas. Statistik deskriptif hanya terbatas dalam menyajikan data dalam bentuk tabel, diagram, grafik, dan besaran lain, sedangkan statistik inferensial selain mencakup statistik deskriptif juga dapat digunakan untuk melakukan estimasi dan penarikan kesimpulan terhadap populasi dari sampelnya. Untuk sampai pada penarikan kesimpulan statistik inferensia melalui tahap uji hipotesis dan uji statistik.","title":"Pengertian"},{"location":"Statistik Deskriptif/#tipe-data-statistik-deskriptif","text":"","title":"Tipe Data Statistik Deskriptif"},{"location":"Statistik Deskriptif/#mean-rata-rata","text":"Mean merupakan teknik penjelasan kelompok yang didasarkan atas nilai rata-rata dari kelompok tersebut. Mean ini didapat dengan menjumlahkan data seluruh individu dalam kelompok itu, kemudian dibagi dengan jumlah individu yang ada pada kelompok tersebut. $$ \\bar x ={\\sum \\limits_{i=1}^{n} x_i \\over N} = {x_1 + x_2 + x_3 + ... + x_n \\over N} $$ Diketahui : x bar = x rata - rata = nilai rata - rata sampel x = data ke n n = banyaknya data","title":"Mean ( Rata-rata )"},{"location":"Statistik Deskriptif/#median-nilai-tengah","text":"Median merupakan salah satu teknik penjelasan kelompok yang didasarkan atas nilai tengah dari kelompok data yang telah disusun urutannya dari yang terkecil sampai yang terbesar, atau sebaliknya dari yang terbesar sampai yang terkecil. $$ Me=Q_2 =\\left( \\begin{matrix} n+1 \\over 2 \\end{matrix} \\right), jika\\quad n\\quad ganjil $$ Diketahui : Me = media dari kelompok data n = banyak data","title":"Median ( Nilai Tengah )"},{"location":"Statistik Deskriptif/#modus","text":"Modus merupakan teknik penjelasan kelompok yang didasarkan atas nilai yang sedang populer (yang sedang menjadi mode) atau nilai yang sering muncul dalam kelompok tersebut. Terdapat dua macam modus untuk sebuah data yaitu modus untuk data tunggal dan modus untuk data golongan. $$ M_o = Tb + p{b_1 \\over b_1 + b_2} $$ Diketahui : Mo = modus dari kelompok data Tb = tepi bawah dari elemen modus b1 = selisih frekuensi antara elemen modus dengan elemen sebelumnya b2 = selisih frekuensi antara elemen modus dengan elemen selanjutnya p = panjang interval nilai b1 dan b2 selalu mutlak(bernilai positif)","title":"Modus"},{"location":"Statistik Deskriptif/#varian-dan-standar-deviasi","text":"Standar deviasi dan varian salah satu teknik statistik yg digunakan untuk menjelaskan homogenitas kelompok. Varian merupakan jumlah kuadrat semua deviasi nilai-nilai individual terhadap rata-rata kelompok. Sedangkan akar dari varians disebut dengan standar deviasi atau simpangan baku. Standar deviasi dan varians simpangan baku merupakan variasi sebaran data. Semakin kecil nilai sebarannya berarti variasi nilai data makin sama Jika sebarannya bernilai 0, maka nilai semua datanya adalah sama. Semakin besar nilai sebarannya berarti data semakin bervariasi. $$ \\sigma^2 = {\\sum \\limits_{i=1}^{n} (x_i - \\bar x)^2 \\over n} $$ Diketahui : Xi = titik data x bar = rata-rata dari semua titik data n = banyak dari anggota data","title":"Varian dan Standar Deviasi"},{"location":"Statistik Deskriptif/#skewness","text":"Skewness atau disebut juga ukuran kemiringan yaitu suatu bilangan yang dapat menunjukan miring atau tidaknya bentuk kurva suatu distribusi frekuensi. Skewness adalah derajat ketidaksimetrisan suatu distribusi. Jika kurva frekuensi suatu distribusi memiliki ekor yang lebih memanjang ke kanan (dilihat dari meannya) maka dikatakan menceng kanan (positif) dan jika sebaliknya maka menceng kiri (negatif). Secara perhitungan, skewness adalah momen ketiga terhadap mean. Distribusi normal (dan distribusi simetris lainnya, misalnya distribusi t atau Cauchy) memiliki skewness 0 (nol). $$ Skewness = {\\sum \\limits{i=1}^n (x_i - \\bar x)^i \\over (n- 1) \\sigma^3} $$ Diketahui : Xi = titik data x bar = rata-rata dari distribusi n = jumlah titik dalam distribusi o = standar deviasi","title":"Skewness"},{"location":"Statistik Deskriptif/#quartile","text":"Quartile adalah nilai-nilai yang membagi data dalam 4 bagian yang sama, atau setiap bagian dari kuartil sebesar 25%. Quartile itu ada 3, yaitu quartile pertama, kedua, dan ketiga. Adapun cara mencarinya hampir sama dengan cara mencari median, perbedaanya pada letak quartile. $$ Q_1 = (n + 1) {1\\over 4} $$ $$ Q_2 = (n + 1) {1\\over 2} $$ $$ Q_3 = (n + 1) {3\\over 4} $$ Diketahui : Q = nilai dari quartile n = banyak dari himpunan data","title":"Quartile"},{"location":"Statistik Deskriptif/#penerapan-statistik-deskriptif","text":"import pandas as pd from scipy import stats df = pd.read_csv('Tugas 1_Penambangan Data.csv',sep=';') data = {\"stats\": ['Min','Max','Mean','Standard Deviasi','Variasi','Skewnes','Quantile 1','Quantile 2', 'Quantile 3','Median','Modus']} for i in df.columns: data[i] = [df[i].min(), df[i].max(), df[i].mean(), round(df[i].std(),2), round(df[i].var(),2), round(df[i].skew(),2), df[i].quantile(0.25),df[i].quantile(0.5),df[i].quantile(0.75), df[i].median(), stats.mode(df[i]).mode[0]] tes = pd.DataFrame(data) tes.style.hide_index() Hasil run : stats Tinggi Badan Berat Badan Usia Lingkar Badan Min 140 40 20 70 Max 190 70 50 100 Mean 164.882 54.72 34.832 85.228 Standard Deviasi 15.18 8.96 9.3 8.8 Variasi 230.35 80.27 86.4 77.42 Skewnes -0 0.1 0.08 -0.07 Quantile 1 151 47 27 78 Quantile 2 165 54 34 85 Quantile 3 179 63 43.25 93 Median 165 54 34 85 Modus 142 50 28 93 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Penerapan Statistik Deskriptif"},{"location":"Tugas 2 - Mengukur Jarak/","text":"Mengukur Jarak Pengukuran jarak memegang peran yang sangat penting dalam menentukan kemiripan atau keteraturan di antara data dan item. Hal ini dilakukan untuk mengetahui, dengan cara seperti apa data dikatakan saling terkait, mirip, tidak mirip, dan metode pengukuran jarak seperti apa yang diperlukan untuk membandingkannya. Pada proses clustering, tahapan menentukan atau mendeskripsikan nilai kuantitatif dari tingkat kemiripan atau ketidakmiripan data (proximity measure) memiliki peranan sangat penting, sehingga perlu dilakukannya perbandingan beberapa metode yang sering digunakan, yaitu jarak euclidean, manhattan, dan minkowski. Mengukur jarak menggunakan Eucliean Distance Euclidean distance merupakan salah satu metode perhitungan jarak yang digunakan untuk mengukur jarak dari 2(dua) buah titik dalam Euclidean space (meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih). Jarak yang paling terkenal yang digunakan untuk data numerik adalah jarak Euclidean. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Jarak Euclidean berkinerja baik ketika digunakan untuk kumpulan data cluster kompak atau terisolasi . Meskipun jarak Euclidean sangat umum dalam pengelompokan, ia memiliki kelemahan: jika dua vektor data tidak memiliki nilai atribut yang sama, kemungkin memiliki jarak yang lebih kecil daripada pasangan vektor data lainnya yang mengandung nilai atribut yang sama. Masalah lain dengan jarak Euclidean sebagai fitur skala terbesar akan mendominasi yang lain. Normalisasi fitur kontinu adalah solusi untuk mengatasi kelemahan ini. Mengukur jarak menggunakan Manhattan Distance Manhattan distance adalah kasus khsusu dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Manhattan distance digunakan untuk menghitung perbedaan absolut (mutlak) antara koordinat sepasang objek. Rumus yang digunakan adalah sebagai berikut: $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ dimana m merupakan bilangan riel positif xi dan yi merupakan dua vektor dalam ruang dimensi n implementasi ukuran jarak minkowski pada model clustering data atribut dilakukan normalisasi untuk mengukur dominasi dari atribut yang memiliki skala data besar,. Mengukur jarak menggunakan Minkowski Distance Minkowski distance merupakan sebuah metrik dalam ruang vektor di mana suatu norma didefinisikan (normed vector space) sekaligus dianggap sebagai generalisasi dari Euclidean distance dan Manhattan distance. Dalam pengukuran jarak objek menggunakan minkowski distance biasanya digunakan nilai p adalah 1 atau 2. Berikut rumus yang digunakan menghitung jarak dalam metode ini. $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} }); Langkah mengukur jarak : #Tugas 2_Penambangan Data.csv import pandas as pd from scipy import stats df = pd.read_csv('Tugas 2_Penambangan Data.csv',nrows=4,sep=';') df import scipy.spatial.distance as minko import itertools def minkowski (x,y,data): return sum(x)+sum(y) dfvalues = df.values.tolist() data = [ [x[0],x[1],minko.minkowski(dfvalues[x[0]], dfvalues[x[1]], 1) ,minko.minkowski(dfvalues[x[0]], dfvalues[x[1]], 2)] for x in itertools.combinations(range(4),2) ] columns = ['x','y', 'Minkowski (m-1)', 'Minkowski (m-2)'] pd.DataFrame(data, columns=columns) numerical=[0,3] categorical=[1,2,6,7] binary=[4,5,8] ordinal=[1,2] def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(df.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(df.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(df.values.tolist()[v1][jnis[x]])*int(df.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [\"x\"]+['y']+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [0]+[2]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [0]+[3]+[0]+[\"{:.2f}\".format(chordDist(0,3,numerical))]+[0]+[0]+[0], [1]+[2]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [1]+[3]+[0]+[\"{:.2f}\".format(chordDist(1,3,numerical))]+[0]+[0]+[0], [2]+[3]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html')))","title":"Mengukur Jarak"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak","text":"Pengukuran jarak memegang peran yang sangat penting dalam menentukan kemiripan atau keteraturan di antara data dan item. Hal ini dilakukan untuk mengetahui, dengan cara seperti apa data dikatakan saling terkait, mirip, tidak mirip, dan metode pengukuran jarak seperti apa yang diperlukan untuk membandingkannya. Pada proses clustering, tahapan menentukan atau mendeskripsikan nilai kuantitatif dari tingkat kemiripan atau ketidakmiripan data (proximity measure) memiliki peranan sangat penting, sehingga perlu dilakukannya perbandingan beberapa metode yang sering digunakan, yaitu jarak euclidean, manhattan, dan minkowski.","title":"Mengukur Jarak"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-eucliean-distance","text":"Euclidean distance merupakan salah satu metode perhitungan jarak yang digunakan untuk mengukur jarak dari 2(dua) buah titik dalam Euclidean space (meliputi bidang euclidean dua dimensi, tiga dimensi, atau bahkan lebih). Jarak yang paling terkenal yang digunakan untuk data numerik adalah jarak Euclidean. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Jarak Euclidean berkinerja baik ketika digunakan untuk kumpulan data cluster kompak atau terisolasi . Meskipun jarak Euclidean sangat umum dalam pengelompokan, ia memiliki kelemahan: jika dua vektor data tidak memiliki nilai atribut yang sama, kemungkin memiliki jarak yang lebih kecil daripada pasangan vektor data lainnya yang mengandung nilai atribut yang sama. Masalah lain dengan jarak Euclidean sebagai fitur skala terbesar akan mendominasi yang lain. Normalisasi fitur kontinu adalah solusi untuk mengatasi kelemahan ini.","title":"Mengukur jarak menggunakan Eucliean Distance"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-manhattan-distance","text":"Manhattan distance adalah kasus khsusu dari jarak Minkowski distance pada m = 1. Seperti Minkowski Distance, Manhattan distance sensitif terhadap outlier. BIla ukuran ini digunakan dalam algoritma clustering , bentuk cluster adalah hyper-rectangular. Manhattan distance digunakan untuk menghitung perbedaan absolut (mutlak) antara koordinat sepasang objek. Rumus yang digunakan adalah sebagai berikut: $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ dimana m merupakan bilangan riel positif xi dan yi merupakan dua vektor dalam ruang dimensi n implementasi ukuran jarak minkowski pada model clustering data atribut dilakukan normalisasi untuk mengukur dominasi dari atribut yang memiliki skala data besar,.","title":"Mengukur jarak menggunakan Manhattan Distance"},{"location":"Tugas 2 - Mengukur Jarak/#mengukur-jarak-menggunakan-minkowski-distance","text":"Minkowski distance merupakan sebuah metrik dalam ruang vektor di mana suatu norma didefinisikan (normed vector space) sekaligus dianggap sebagai generalisasi dari Euclidean distance dan Manhattan distance. Dalam pengukuran jarak objek menggunakan minkowski distance biasanya digunakan nilai p adalah 1 atau 2. Berikut rumus yang digunakan menghitung jarak dalam metode ini. $$ d _ { \\operatorname { min } } = ( \\ sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Mengukur jarak menggunakan Minkowski Distance"},{"location":"Tugas 2 - Mengukur Jarak/#langkah-mengukur-jarak","text":"#Tugas 2_Penambangan Data.csv import pandas as pd from scipy import stats df = pd.read_csv('Tugas 2_Penambangan Data.csv',nrows=4,sep=';') df import scipy.spatial.distance as minko import itertools def minkowski (x,y,data): return sum(x)+sum(y) dfvalues = df.values.tolist() data = [ [x[0],x[1],minko.minkowski(dfvalues[x[0]], dfvalues[x[1]], 1) ,minko.minkowski(dfvalues[x[0]], dfvalues[x[1]], 2)] for x in itertools.combinations(range(4),2) ] columns = ['x','y', 'Minkowski (m-1)', 'Minkowski (m-2)'] pd.DataFrame(data, columns=columns) numerical=[0,3] categorical=[1,2,6,7] binary=[4,5,8] ordinal=[1,2] def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(df.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(df.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(df.values.tolist()[v1][jnis[x]])*int(df.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [\"x\"]+['y']+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [0]+[2]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [0]+[3]+[0]+[\"{:.2f}\".format(chordDist(0,3,numerical))]+[0]+[0]+[0], [1]+[2]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [1]+[3]+[0]+[\"{:.2f}\".format(chordDist(1,3,numerical))]+[0]+[0]+[0], [2]+[3]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html')))","title":"Langkah mengukur jarak :"},{"location":"Tugas 3 - Missing Value with KNN/","text":"Missing Value with K Nearest Neighbor Missing Data adalah suatu informasi yang tidak tersedia dalam suatu data. Missing data mempengaruhi hasil penelitian karena keberadaan missing data dapat mengurangi tingkat akurasi dari hasil penelitian. Missing data dapat diatasi dengan imputasi. Imputasi merupakan suatu metode yang mengatasi missing data dengan mengisi nilai yang hilang dengan suatu nilai berdasarkan informasi lain yang didapat dari data tersebut. Salah satu metode imputasi adalah metode K Nearest Neighbor(KNN). Penelitian ini dilakukan untuk memprediksi nilai yang hilang dengan metode KNN. KNN bekerja dengan menghitung weight mean estimation berdasarkan jumlah K. K adalah jumlah observasi terdekat yang akan digunakan. Dalam penelitian ini, K yang digunakan yaitu K = 1, K = 5, K = 10, K = 15, dan K=20. Mean Square Error (MSE) dan Mean Absolute Percentage Error (MAPE) digunakan untuk mengetahui ketepatan hasil imputasi. Berdasarkan nilai rata-rata MSE dan MAPE dari 10 replikasi, KNN terbaik pada missing data 10% dan 20% terjadi pada saat K = 10, sedangkan untuk missing data 30% terjadi saat K = 15. Imputasi dengan Metode KNN Salah satu metode yang sering digunakan untuk masalah imputasi missing data adalah KNN. Metode ini merupakan metode yang sederhana dan fleksibel karena dapat digunakan baik pada variabel dengan data kontinu maupun data diskrit (Mawarsari, 2012). Algoritma KNN : Tentukan nilai k Tentukan jarak Euclidian antar instance pada dataset Dm dan dataset Dc Imputasi data hilang dengan rata-rata k tetangga terdekat di Dc Kelemahan dan Keuntungan KNN Keuntungan KNN adalah karena metode ini dapat digunakan untuk data yang bersifat kualitatif maupun kuantitatif, tanpa perlu membuat model prediksi, algoritma sederhana, KNN dibutuhkan untuk pertimbangan struktur korelasi data (Acuna, 2004). Sedangkan kelemahan KNN adalah adanya pemilihan fungsi jarak, dapat menggunakan Euclidean, Manhattan, Mahalanobis dan Pearson. Selain itu Algoritma KNN akan mencari data yang paling mirip pada seluruh data pada dataset. Hal ini mengakibatkan kompleksitas waktu yang dibutuhkan algoritma ini menjadi cukup tinggi. Kelemahan yang ketiga adalah Pemilihan nilai k yang tidak tepat dapat menurukan kinerja klasifikasi (Acuna, 2004). # importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = {'First Score':[100, 90, np.nan, 95], 'Second Score': [30, 45, 56, np.nan], 'Third Score':[np.nan, 40, 80, 98]} # creating a dataframe from dictionary df = pd.DataFrame(dict) # filling missing value using fillna() df.fillna(0)","title":"Missing Value with K Nearest Neighbor"},{"location":"Tugas 3 - Missing Value with KNN/#missing-value-with-k-nearest-neighbor","text":"Missing Data adalah suatu informasi yang tidak tersedia dalam suatu data. Missing data mempengaruhi hasil penelitian karena keberadaan missing data dapat mengurangi tingkat akurasi dari hasil penelitian. Missing data dapat diatasi dengan imputasi. Imputasi merupakan suatu metode yang mengatasi missing data dengan mengisi nilai yang hilang dengan suatu nilai berdasarkan informasi lain yang didapat dari data tersebut. Salah satu metode imputasi adalah metode K Nearest Neighbor(KNN). Penelitian ini dilakukan untuk memprediksi nilai yang hilang dengan metode KNN. KNN bekerja dengan menghitung weight mean estimation berdasarkan jumlah K. K adalah jumlah observasi terdekat yang akan digunakan. Dalam penelitian ini, K yang digunakan yaitu K = 1, K = 5, K = 10, K = 15, dan K=20. Mean Square Error (MSE) dan Mean Absolute Percentage Error (MAPE) digunakan untuk mengetahui ketepatan hasil imputasi. Berdasarkan nilai rata-rata MSE dan MAPE dari 10 replikasi, KNN terbaik pada missing data 10% dan 20% terjadi pada saat K = 10, sedangkan untuk missing data 30% terjadi saat K = 15.","title":"Missing Value with K Nearest Neighbor"},{"location":"Tugas 3 - Missing Value with KNN/#imputasi-dengan-metode-knn","text":"Salah satu metode yang sering digunakan untuk masalah imputasi missing data adalah KNN. Metode ini merupakan metode yang sederhana dan fleksibel karena dapat digunakan baik pada variabel dengan data kontinu maupun data diskrit (Mawarsari, 2012). Algoritma KNN : Tentukan nilai k Tentukan jarak Euclidian antar instance pada dataset Dm dan dataset Dc Imputasi data hilang dengan rata-rata k tetangga terdekat di Dc","title":"Imputasi dengan Metode KNN"},{"location":"Tugas 3 - Missing Value with KNN/#kelemahan-dan-keuntungan-knn","text":"Keuntungan KNN adalah karena metode ini dapat digunakan untuk data yang bersifat kualitatif maupun kuantitatif, tanpa perlu membuat model prediksi, algoritma sederhana, KNN dibutuhkan untuk pertimbangan struktur korelasi data (Acuna, 2004). Sedangkan kelemahan KNN adalah adanya pemilihan fungsi jarak, dapat menggunakan Euclidean, Manhattan, Mahalanobis dan Pearson. Selain itu Algoritma KNN akan mencari data yang paling mirip pada seluruh data pada dataset. Hal ini mengakibatkan kompleksitas waktu yang dibutuhkan algoritma ini menjadi cukup tinggi. Kelemahan yang ketiga adalah Pemilihan nilai k yang tidak tepat dapat menurukan kinerja klasifikasi (Acuna, 2004). # importing pandas as pd import pandas as pd # importing numpy as np import numpy as np # dictionary of lists dict = {'First Score':[100, 90, np.nan, 95], 'Second Score': [30, 45, 56, np.nan], 'Third Score':[np.nan, 40, 80, 98]} # creating a dataframe from dictionary df = pd.DataFrame(dict) # filling missing value using fillna() df.fillna(0)","title":"Kelemahan dan Keuntungan KNN"}]}